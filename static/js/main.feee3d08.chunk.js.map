{"version":3,"sources":["App.tsx","index.tsx"],"names":["goodsFromServer","App","state","h1Content","selectedGood","isListLoaded","selectGoodFromList","good","setState","prevState","removeGoodFromList","filter","goodItem","createH1Content","goods","length","slice","join","setTimeout","this","className","Boolean","type","onClick","map","item","includes","React","Component","ReactDOM","render","document","getElementById"],"mappings":"qPAGMA,EAA4B,CAChC,YACA,SACA,OACA,YACA,QACA,QACA,OACA,QACA,MACA,UASIC,E,4MACJC,MAAQ,CACNC,UAAW,oBACXC,aAAc,CAAC,OACfC,cAAc,G,EAYhBC,mBAAqB,SAACC,GACpB,EAAKC,UAAS,SAAAC,GAAS,MAAK,CAC1BL,aAAa,GAAD,mBAAMK,EAAUL,cAAhB,CAA8BG,S,EAI9CG,mBAAqB,SAACH,GACpB,EAAKC,UAAS,SAAAC,GAAS,MAAK,CAC1BL,aAAcK,EACXL,aACAO,QAAO,SAAAC,GAAQ,OAAIA,IAAaL,U,EAIvCM,gBAAkB,WAChB,IAAMC,EAAQ,EAAKZ,MAAME,aAEzB,OAAIU,EAAMC,OAAS,EACX,GAAN,OAAUD,EAAME,MAAM,GAAI,GAAGC,KAAK,MAAlC,gBAA+CH,EAAMA,EAAMC,OAAS,GAApE,iBAGmB,IAAjBD,EAAMC,OACF,GAAN,OAAUD,EAAM,GAAhB,gBAA0BA,EAAM,GAAhC,iBAGmB,IAAjBA,EAAMC,OACF,GAAN,OAAUD,EAAM,GAAhB,gBAGK,qB,uDAtCT,WAAqB,IAAD,OAClBI,YAAW,WACT,EAAKV,SAAS,CACZL,UAAW,GACXE,cAAc,MAEf,O,oBAmCL,WAAU,IAAD,OACP,EAAkDc,KAAKjB,MAA/CE,EAAR,EAAQA,aAAcD,EAAtB,EAAsBA,UAAWE,EAAjC,EAAiCA,aAEjC,OACE,sBAAKe,UAAU,MAAf,UACE,6BAAKjB,GAAagB,KAAKN,oBACtBb,EAAgBe,OAChBM,QAAQjB,EAAaW,SACpB,wBACEO,KAAK,SACLC,QAAS,WACP,EAAKf,SAAS,CACZJ,aAAc,MAJpB,mBAaAC,EAEI,oBAAIe,UAAU,gBAAd,SACGpB,EAAgBwB,KAAI,SAAAC,GACnB,OACE,qBACEL,UAAWhB,EAAasB,SAASD,GAC7B,iBACA,OAHN,UAMGA,EACArB,EAAasB,SAASD,GAEnB,wBACEH,KAAK,SACLC,QAAS,WACP,EAAKb,mBAAmBe,IAH5B,oBAUA,wBACEH,KAAK,SACLC,QAAS,WACP,EAAKjB,mBAAmBmB,IAH5B,sBAfCA,QA6Bb,oB,GA3GIE,IAAMC,WAkHT3B,ICrIf4B,IAASC,OACP,cAAC,EAAD,IACAC,SAASC,eAAe,W","file":"static/js/main.feee3d08.chunk.js","sourcesContent":["import React from 'react';\nimport './App.scss';\n\nconst goodsFromServer: string[] = [\n  'Dumplings',\n  'Carrot',\n  'Eggs',\n  'Ice cream',\n  'Apple',\n  'Bread',\n  'Fish',\n  'Honey',\n  'Jam',\n  'Garlic',\n];\n\ninterface State {\n  selectedGood: string[];\n  h1Content: string;\n  isListLoaded: boolean;\n}\n\nclass App extends React.Component<{}, State> {\n  state = {\n    h1Content: 'No goods selected',\n    selectedGood: ['Jam'],\n    isListLoaded: false,\n  };\n\n  componentDidMount() {\n    setTimeout(() => {\n      this.setState({\n        h1Content: '',\n        isListLoaded: true,\n      });\n    }, 3000);\n  }\n\n  selectGoodFromList = (good: string) => {\n    this.setState(prevState => ({\n      selectedGood: [...prevState.selectedGood, good],\n    }));\n  };\n\n  removeGoodFromList = (good: string) => {\n    this.setState(prevState => ({\n      selectedGood: prevState\n        .selectedGood\n        .filter(goodItem => goodItem !== good),\n    }));\n  };\n\n  createH1Content = () => {\n    const goods = this.state.selectedGood;\n\n    if (goods.length > 2) {\n      return `${goods.slice(0, -1).join(', ')} and ${goods[goods.length - 1]} are selected`;\n    }\n\n    if (goods.length === 2) {\n      return `${goods[0]} and ${goods[1]} are selected`;\n    }\n\n    if (goods.length === 1) {\n      return `${goods[0]} is selected`;\n    }\n\n    return 'No goods selected';\n  };\n\n  render() {\n    const { selectedGood, h1Content, isListLoaded } = this.state;\n\n    return (\n      <div className=\"App\">\n        <h1>{h1Content || this.createH1Content()}</h1>\n        {goodsFromServer.length}\n        {Boolean(selectedGood.length) && (\n          <button\n            type=\"button\"\n            onClick={() => {\n              this.setState({\n                selectedGood: [],\n              });\n            }}\n          >\n            Clear\n          </button>\n        )}\n\n        {\n          isListLoaded\n            ? (\n              <ul className=\"list_of_goods\">\n                {goodsFromServer.map(item => {\n                  return (\n                    <li\n                      className={selectedGood.includes(item)\n                        ? 'good is-active'\n                        : 'good'}\n                      key={item}\n                    >\n                      {item}\n                      {selectedGood.includes(item)\n                        ? (\n                          <button\n                            type=\"button\"\n                            onClick={() => {\n                              this.removeGoodFromList(item);\n                            }}\n                          >\n                            Remove\n                          </button>\n                        )\n                        : (\n                          <button\n                            type=\"button\"\n                            onClick={() => {\n                              this.selectGoodFromList(item);\n                            }}\n                          >\n                            Select\n                          </button>\n                        )}\n                    </li>\n                  );\n                })}\n              </ul>\n            )\n            : 'Loading...'\n        }\n      </div>\n    );\n  }\n}\n\nexport default App;\n","import ReactDOM from 'react-dom';\nimport App from './App';\n\nReactDOM.render(\n  <App />,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}